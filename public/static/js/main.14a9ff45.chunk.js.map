{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/formatingEvent.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/UiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","nonTokenFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","tokenFetch","token","localStorage","getItem","types","login","user","type","payload","checkingFinish","logout","eventLogoutCleaning","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","formatingEvents","events","map","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventsLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","later","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","getState","id","console","log","newEvent","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14a9ff45.chunk.js","sourcesContent":["\r\nconst baseUrl= process.env.REACT_APP_API_URL;\r\n\r\nconst nonTokenFetch = ( endpoint, data, method= 'GET' ) => {\r\n    const url = `${baseUrl}/${endpoint}`; // localhost:4000/api\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } \r\n    else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst tokenFetch = ( endpoint, data, method= 'GET' ) => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`; // localhost:4000/api\r\n    const token = localStorage.getItem('token')|| '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } \r\n    else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    nonTokenFetch,\r\n    tokenFetch\r\n}","\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogoutCleaning: '[event] Logout Cleaning',\r\n    \r\n\r\n    eventAddNew: '[event] Add new',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    \r\n    eventsLoaded: '[event] Events Loaded',\r\n\r\n    authCheckingFinished: '[auth] Finished cheking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { nonTokenFetch, tokenFetch } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await nonTokenFetch( 'auth/login',{email,password}, 'POST' )\r\n        const body = await resp.json( resp );\r\n\r\n        if ( body.ok ){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n            \r\n        }\r\n        else{\r\n            Swal.fire('Error',body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n} )\r\n\r\nexport const startRegister =  ( email, password, name ) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await nonTokenFetch( 'auth/register', { name,email,password}, 'POST' )\r\n        const body = await resp.json( resp );\r\n\r\n        if ( body.ok ){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n            \r\n        }\r\n        else{\r\n            Swal.fire('Error',body.msg, 'error');\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startCkecking = () => {\r\n    return async (dispatch) => {\r\n \r\n        const resp = await tokenFetch( 'auth/renew' ); // por defecto es un GET\r\n        const body = await resp.json( resp );\r\n\r\n        if ( body.ok ){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n            \r\n        }\r\n        else{\r\n            dispatch(  checkingFinish() )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinished })\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear(); \r\n        \r\n        dispatch( logout());\r\n        dispatch( eventLogoutCleaning());\r\n\r\n    }\r\n}\r\n\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\nconst eventLogoutCleaning = () => ({ type: types.eventLogoutCleaning });","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( { target} ) => {\r\n        setValues( {\r\n            ...values, \r\n            [target.name]: target.value \r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\r\n        lEmail: 'ricardo@gmail.com',\r\n        lPassword: '123456'\r\n    } );\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\r\n        rName: 'liliana',\r\n        rEmail: 'liliana@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    } );\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n    \r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin( lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2){\r\n            return Swal.fire('Error','Las Contraseñas deben de ser iguales','error');\r\n        }\r\n\r\n        dispatch( startRegister(rEmail,rPassword1,rName) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name= \"lEmail\"\r\n                                value= { lEmail }\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name= \"lPassword\"\r\n                                value= { lPassword }\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogout() );\r\n\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n           <div className=\"container-fluid\">\r\n                <span className=\"navbar-brand\">\r\n                    {name}\r\n                </span>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={ handleLogout }    \r\n                >\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    <span> Salir</span>\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ( event ) => {\r\n\r\n    const { title, event: e } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span>- { e.user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import moment from 'moment'\r\n\r\nexport const formatingEvents = ( events=[] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    )\r\n\r\n}\r\n\r\n","import { types } from \"../types/types\"\r\nimport { tokenFetch } from '../helpers/fetch'\r\nimport { formatingEvents } from \"../helpers/formatingEvent\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const newEvent = event.formValues;\r\n        const { uid, name } = getState().auth;\r\n        // console.log(event.formValues);\r\n\r\n        try {\r\n\r\n            const resp = await tokenFetch('events', newEvent, 'POST');\r\n            const body = await resp.json();\r\n    \r\n            if ( body.ok ){\r\n                newEvent.id = body.event.id\r\n                newEvent.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log( newEvent );\r\n                dispatch( eventAddNew( newEvent ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n const eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            \r\n\r\n            const resp = await tokenFetch(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated(event))\r\n            }\r\n            else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleted = ( ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            \r\n            const { id } = getState().calendar.activeEvent;\r\n\r\n            const resp = await tokenFetch(`events/${id}`, {} ,'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted())\r\n            }\r\n            else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await tokenFetch('events');\r\n            const body = await resp.json();\r\n\r\n            // convertir de string a date las fechas start y end\r\n            const events = formatingEvents( body.events );\r\n            \r\n\r\n            dispatch( eventsLoaded( events ));\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventsLoaded = ( events ) => ({\r\n    type: types.eventsLoaded,\r\n    payload: events\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root')\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst later = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: later.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    \r\n    const [ dateStart , setDateStart] = useState( now.toDate() )\r\n    const [ dateEnd , setDateEnd] = useState( later.toDate() )\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    // keeping the active event data in the formValues\r\n    useEffect(() => {\r\n        if ( activeEvent ){\r\n            setFormValues( activeEvent );\r\n        }\r\n        else{\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [ activeEvent, setFormValues ])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n    \r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n        \r\n        // console.log(momentStart);\r\n        // console.log(momentEnd);\r\n\r\n        if( momentStart.isSameOrAfter(momentEnd) ){\r\n            return Swal.fire('Error', 'la fecha y hora fin, debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ){\r\n            setTitleValid( false );\r\n        }\r\n\r\n        if( activeEvent ){\r\n            dispatch( eventStartUpdated( formValues ) )\r\n        }else{\r\n        // TODO realizar grabacion en BD\r\n            // creando el evento\r\n            dispatch( eventStartAddNew({ formValues }) );\r\n        }\r\n        \r\n\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={customStyles}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"        \r\n          closeTimeoutMS={ 200  }\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar Evento' : 'Nuevo evento' }</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }    \r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        className=\"form-control\"\r\n                        minDate={ dateStart }\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange= { handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange= { handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    // const { modalOpen } = useSelector(state => state.ui)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickFab= () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickFab }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDeleted() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month' );\r\n    \r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch])    \r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() )\r\n\r\n    }\r\n    \r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n    \r\n    // Guardando la ultima vista\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n        \r\n    }\r\n    \r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter= ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color:'white'\r\n        }\r\n    \r\n        return{ style };\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent= { onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { startCkecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    // Verificando si el token es valido para revalidarlo\r\n    useEffect(() => {\r\n        dispatch( startCkecking() )\r\n    }, [dispatch] )\r\n\r\n    // pantalla de espere mientras se autentica al hacer refresh\r\n    if (checking ) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            exact \r\n                            path=\"/login\" \r\n                            component={ LoginScreen }\r\n                            isAuthenticated={ !!uid } />\r\n                        <PrivateRoute \r\n                            exact \r\n                            path=\"/\" \r\n                            component={ CalendarScreen }\r\n                            isAuthenticated={ !!uid } />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        \r\n        case types.authCheckingFinished:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title:'Cumpleanos del Jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2,'hour').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id:'123',\r\n//         name: 'Ricardo',\r\n//     }\r\n// }\r\n\r\nconst initialState= {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = ( state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case(types.eventSetActive):\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            } \r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e => (\r\n                    (e.id === action.payload.id)\r\n                    ? action.payload\r\n                    : e\r\n                ))\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => (\r\n                    (e.id !== state.activeEvent.id)  )),\r\n                activeEvent: null\r\n            }\r\n \r\n        case types.eventsLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogoutCleaning:\r\n            return{\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./UiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}